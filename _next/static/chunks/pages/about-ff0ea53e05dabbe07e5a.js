(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[521],{9825:function(e,i,t){"use strict";t.r(i),t.d(i,{default:function(){return o}});var s=t(5893),a=t(1664),n=t(5396),r=t.n(n);function o(){return(0,s.jsx)("div",{className:"centerContainer",children:(0,s.jsxs)("div",{className:"".concat(r().topContainer," anchorTagsDefaultColor"),children:[(0,s.jsx)("h1",{style:{textAlign:"center"},children:"About this site"}),(0,s.jsxs)("div",{style:{padding:"16px",borderBottom:"1px solid var(--border-color-light)"},children:[(0,s.jsx)("h2",{id:">Inspiration",children:"Inspiration"}),(0,s.jsxs)("p",{children:["I vaguley remember a dota player/ personality ",(0,s.jsx)("a",{href:"https://liquipedia.net/dota2/Merlini",children:"Merlini"})," ","having a website featuring organized dota games he had played. Here fans of his could search and filter through these games by hero names, in-game items, etc. Some of these games even had youtube videos with a first-person-view (FPV) of Merlini playing. I tried searching for this website again in 2020 but it seems like the site has gone offline since."]}),(0,s.jsx)("p",{children:"Fast forward to 2020 and I am searching for a note taking software to try and help organize my notes. After some research in this topic I come to the conclusion that there are two main ways to organize notes. You either use folders or you use tags. And imo tags are the way to go. So I decide to try and build a site similar to Merlini's and categorize some videos using tags."}),(0,s.jsx)("p",{children:"When Merlini's site was still up I did not analyze it carefully to see how he was building it. But I believe that he was using the public Dota 2 API (horrible documentation) along with the Dota 2 match ID in order to organize his data. This is an approach I was thinking of taking myself but unlike Merlini whose entire site focused only on Dota 2 content, I do not wish to limit the type of content I produce to only Dota 2 vidoes. For this reason and because not all games in which I plan to record videos for have such an accessible API, I have choosen to organize my data using tags. Usage of the Dota 2 API might still be a good idea however speed up the process for videos featuring Dota 2."})]}),(0,s.jsxs)("div",{style:{padding:"16px",borderBottom:"1px solid var(--border-color-light)"},children:[(0,s.jsx)("h2",{children:"Video relations"}),(0,s.jsx)("p",{children:"The following relations hold true for all videos. Videos have tags associated with them. These tags are used to categorize videos. Videos can be associated with a certain game. Games are associated with certain genres/ categories/ devs/ publishers."}),(0,s.jsxs)("p",{children:["Game information is obtained from"," ",(0,s.jsx)("a",{href:"https://store.steampowered.com/",children:"Steam"})," ","and"," ",(0,s.jsx)("a",{href:"https://www.igdb.com/",children:"igdb"})]})]}),(0,s.jsxs)("div",{style:{padding:"16px"},children:[(0,s.jsx)("h2",{children:"Video Example"}),(0,s.jsxs)("p",{children:["Here's how a video uploaded featuring the steam game"," ",(0,s.jsx)("a",{href:"https://store.steampowered.com/app/570/Dota_2/",children:"Dota 2"})," might look."]})]}),(0,s.jsxs)("div",{style:{padding:"16px",borderBottom:"1px solid var(--border-color-light)"},children:[(0,s.jsxs)("ul",{className:r().indentTag,children:[(0,s.jsx)("h3",{children:"Tag (video tags)"}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"hero: treant protector"})}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"role: hardsupport 5"})}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"lane: safelane"})}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"notable player: arteezy"})}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"7000mmr"})}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"7k"})}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"fpv"})})]}),(0,s.jsxs)("ul",{className:r().indentTag,children:[(0,s.jsx)("h3",{children:"Game"}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"Dota 2"})})]}),(0,s.jsxs)("ul",{className:r().indentTag,children:[(0,s.jsx)("h3",{children:"Genre"}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"Free to Play"})}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"MOBA"})}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"Multiplayer"})}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"Strategy"})})]}),(0,s.jsxs)("ul",{className:r().indentTag,children:[(0,s.jsx)("h3",{children:"Developer"}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"Valve"})})]}),(0,s.jsxs)("ul",{className:r().indentTag,children:[(0,s.jsx)("h3",{children:"Publisher"}),(0,s.jsx)("li",{children:(0,s.jsx)("span",{children:"Valve"})})]})]}),(0,s.jsxs)("div",{style:{padding:"16px",borderBottom:"1px solid var(--border-color-light)"},children:[(0,s.jsx)("h2",{children:"How to search"}),(0,s.jsx)("p",{children:"And here's how a user might use the above filter categories tag, game, genre, developer, publisher to find videos to their liking."}),(0,s.jsx)("p",{children:'A user may only want to view videos featuring a particular hero. Notice from the example above that the tag for heros is in the following form, "hero: treant protector".'}),(0,s.jsxs)("p",{children:["Go to"," ",(0,s.jsx)(a.default,{href:"../videos/search",children:(0,s.jsx)("a",{children:"search"})})," ",'find the tag button and toggle "hero: treant protector" tag to find videos containing this tag.']}),(0,s.jsx)("p",{children:'The video tags are what really define a video and give it its unique attributes. The goal is to use intuitive tags so that users familiar with a game are able to easily transfer that familiarity into words which have hopefully been captured with tags. If someone thinks, "Hmm I like this game, but I\'d really like to look at X content from this game", and the program is able to deliver I would consider it a success.'})]})]})})}},2088:function(e,i,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/about",function(){return t(9825)}])},5396:function(e){e.exports={topContainer:"about_topContainer__1W9Xt",indentTag:"about_indentTag__1_Wuw"}}},function(e){e.O(0,[774,888,179],(function(){return i=2088,e(e.s=i);var i}));var i=e.O();_N_E=i}]);